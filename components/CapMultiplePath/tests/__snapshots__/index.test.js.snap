// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CapMultiplePath Should render the component 1`] = `
<Wrapper
  ContentsRenderer={[Function]}
  addPathDisabled={false}
  addPathDisabledMessage=""
  defaultContents="Hello World"
  isToggleEnabled={true}
  pathList={
    Array [
      Object {
        "contents": "Test 1",
        "id": "1",
        "pathName": null,
      },
    ]
  }
  setPathList={[MockFunction]}
>
  <CapMultiplePath
    ContentsRenderer={[Function]}
    addPathDisabled={false}
    addPathDisabledMessage=""
    capBlockWidth={676}
    defaultContents="Hello World"
    deleteButtonTextMsg="Yes, Delete"
    deleteConfirmationTextMsg="Are you sure you wish to delete path"
    deleteConfirmationTitleMsg="Confirm delete path"
    deleteConfirmationWarningMsg="This action cannot be undone."
    isToggleEnabled={true}
    noMsg="No"
    notUniqueMsg="Not Unique"
    pathList={
      Array [
        Object {
          "contents": "Test 1",
          "id": "1",
          "pathName": null,
        },
      ]
    }
    pathMsg="Path"
    setPathList={[MockFunction]}
    yesMsg="Yes"
  >
    <CapRow
      key="1"
    >
      <Row
        className="cap-row-v2"
        gutter={0}
      >
        <div
          className="ant-row cap-row-v2"
        >
          <styled.div
            key=".0"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jzJRlG",
                    "isStatic": false,
                    "lastClassName": "eEgJrW",
                    "rules": Array [
                      "
  display: flex;
  position: relative;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jzJRlG",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-jzJRlG eEgJrW"
              >
                <TogglePositionIcons
                  index={0}
                >
                  <Styled(CapIcon)
                    disabled={true}
                    onClick={[Function]}
                    type="arrow-up"
                  >
                    <StyledComponent
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "AntIcon": [Function],
                          "CapIconAvatar": [Function],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kgoBCf",
                            "isStatic": false,
                            "lastClassName": "CHHmm",
                            "rules": Array [
                              "
  display:flex;
  align-items:center;
  svg {
    height: 16px;
    width: 16px;
    margin-bottom: ",
                              [Function],
                              ";
  }
  color: ",
                              [Function],
                              ";
  display: ",
                              [Function],
                              ";
",
                            ],
                          },
                          "displayName": "Styled(CapIcon)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kgoBCf",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      type="arrow-up"
                    >
                      <CapIcon
                        className="sc-kgoBCf kxasVt"
                        disabled={true}
                        onClick={[Function]}
                        type="arrow-up"
                      >
                        <Styled(Icon)
                          className="cap-icon-v2 cap-icon-v2-arrow-up sc-kgoBCf kxasVt disabled"
                          component={[Function]}
                          onClick={[Function]}
                        >
                          <StyledComponent
                            className="cap-icon-v2 cap-icon-v2-arrow-up sc-kgoBCf kxasVt disabled"
                            component={[Function]}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "dNCrpK",
                                  "rules": Array [
                                    "
  font-size: ",
                                    [Function],
                                    ";
",
                                  ],
                                },
                                "createFromIconfontCN": [Function],
                                "displayName": "Styled(Icon)",
                                "foldedComponentIds": Array [],
                                "getTwoToneColor": [Function],
                                "render": [Function],
                                "setTwoToneColor": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <Icon
                              className="sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-arrow-up sc-kgoBCf kxasVt disabled"
                              component={[Function]}
                              onClick={[Function]}
                            >
                              <LocaleReceiver
                                componentName="Icon"
                              >
                                <i
                                  className="anticon sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-arrow-up sc-kgoBCf kxasVt disabled"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <component
                                    aria-hidden={true}
                                    className=""
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    width="1em"
                                  >
                                    <SvgArrowUp>
                                      <svg
                                        fill="currentColor"
                                        height="1em"
                                        style={
                                          Object {
                                            "left": "-4px",
                                            "position": "relative",
                                            "transform": "rotate(180deg)",
                                          }
                                        }
                                        viewBox="0 0 16 16"
                                        width="1em"
                                      >
                                        <path
                                          d="M5 8.25v-6.9a1 1 0 112 0v6.9l2.9-2.9a.99.99 0 011.4 1.4l-4.593 4.593a1 1 0 01-1.414 0L.7 6.75a.99.99 0 111.4-1.4L5 8.25z"
                                          id="arrow-up_svg__a"
                                        />
                                      </svg>
                                    </SvgArrowUp>
                                  </component>
                                </i>
                              </LocaleReceiver>
                            </Icon>
                          </StyledComponent>
                        </Styled(Icon)>
                      </CapIcon>
                    </StyledComponent>
                  </Styled(CapIcon)>
                  <Styled(CapIcon)
                    disabled={true}
                    onClick={[Function]}
                    type="arrow-down"
                  >
                    <StyledComponent
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "AntIcon": [Function],
                          "CapIconAvatar": [Function],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kgoBCf",
                            "isStatic": false,
                            "lastClassName": "CHHmm",
                            "rules": Array [
                              "
  display:flex;
  align-items:center;
  svg {
    height: 16px;
    width: 16px;
    margin-bottom: ",
                              [Function],
                              ";
  }
  color: ",
                              [Function],
                              ";
  display: ",
                              [Function],
                              ";
",
                            ],
                          },
                          "displayName": "Styled(CapIcon)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kgoBCf",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      type="arrow-down"
                    >
                      <CapIcon
                        className="sc-kgoBCf CHHmm"
                        disabled={true}
                        onClick={[Function]}
                        type="arrow-down"
                      >
                        <Styled(Icon)
                          className="cap-icon-v2 cap-icon-v2-arrow-down sc-kgoBCf CHHmm disabled"
                          component={[Function]}
                          onClick={[Function]}
                        >
                          <StyledComponent
                            className="cap-icon-v2 cap-icon-v2-arrow-down sc-kgoBCf CHHmm disabled"
                            component={[Function]}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "dNCrpK",
                                  "rules": Array [
                                    "
  font-size: ",
                                    [Function],
                                    ";
",
                                  ],
                                },
                                "createFromIconfontCN": [Function],
                                "displayName": "Styled(Icon)",
                                "foldedComponentIds": Array [],
                                "getTwoToneColor": [Function],
                                "render": [Function],
                                "setTwoToneColor": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <Icon
                              className="sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-arrow-down sc-kgoBCf CHHmm disabled"
                              component={[Function]}
                              onClick={[Function]}
                            >
                              <LocaleReceiver
                                componentName="Icon"
                              >
                                <i
                                  className="anticon sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-arrow-down sc-kgoBCf CHHmm disabled"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <component
                                    aria-hidden={true}
                                    className=""
                                    fill="currentColor"
                                    focusable="false"
                                    height="1em"
                                    width="1em"
                                  >
                                    <SvgArrowDown>
                                      <svg
                                        fill="currentColor"
                                        height="1em"
                                        viewBox="0 0 16 16"
                                        width="1em"
                                      >
                                        <path
                                          d="M5 8.25v-6.9a1 1 0 112 0v6.9l2.9-2.9a.99.99 0 011.4 1.4l-4.593 4.593a1 1 0 01-1.414 0L.7 6.75a.99.99 0 111.4-1.4L5 8.25z"
                                        />
                                      </svg>
                                    </SvgArrowDown>
                                  </component>
                                </i>
                              </LocaleReceiver>
                            </Icon>
                          </StyledComponent>
                        </Styled(Icon)>
                      </CapIcon>
                    </StyledComponent>
                  </Styled(CapIcon)>
                </TogglePositionIcons>
                <Wrapper
                  deleteCallback={[Function]}
                  isCollapseEnabled={true}
                  isDeleteEnabled={false}
                  width="676px"
                >
                  <CapBlock
                    borderLeftColor="#2466ea"
                    collapseBlock="Collapse"
                    componentName="path"
                    deleteBlock="Delete"
                    deleteCallback={[Function]}
                    expandBlock="Expand"
                    isCollapseEnabled={true}
                    isDeleteEnabled={false}
                    width="676px"
                  >
                    <styled.div
                      borderLeftColor="#2466ea"
                      width="676px"
                    >
                      <StyledComponent
                        borderLeftColor="#2466ea"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-fjdhpX",
                              "isStatic": false,
                              "lastClassName": "WkuSW",
                              "rules": Array [
                                "
  & {
    position: relative;
    border: 1px solid ",
                                "#dfe2e7",
                                ";
    border-left: ",
                                [Function],
                                ";
    border-radius: 4px;
    padding: 26px 20px;
    width: ",
                                [Function],
                                ";

    [data-type=\\"rounded-icon\\"] {
      height: 18px;
      width: 18px;
      padding: 2px;
      border-radius: 100%;
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    [data-type-value=\\"delete\\"] {
      position: absolute;
      top: 0;
      left: 90%;
      transform: translate(0%, -50%);
      background-color: ",
                                "#fbd3d8",
                                ";
    }

    [data-type-value=\\"collapse\\"] {
      position: absolute;
      top: 0;
      left: 95%;
      transform: translate(0%, -50%);
      background-color: #d3d3d3;
    }
  }
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-fjdhpX",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        width="676px"
                      >
                        <div
                          className="sc-fjdhpX WkuSW"
                          width="676px"
                        >
                          <CapColumn
                            data-type="rounded-icon"
                            data-type-value="collapse"
                          >
                            <Col
                              className="cap-column-v2"
                              data-type="rounded-icon"
                              data-type-value="collapse"
                            >
                              <div
                                className="ant-col cap-column-v2"
                                data-type="rounded-icon"
                                data-type-value="collapse"
                              >
                                <CapTooltip
                                  key=".0"
                                  title="Collapse path"
                                >
                                  <Tooltip
                                    arrowPointAtCenter={false}
                                    autoAdjustOverflow={true}
                                    mouseEnterDelay={0.1}
                                    mouseLeaveDelay={0.1}
                                    overlayClassName="cap-tooltip-overlay-v2"
                                    placement="top"
                                    title="Collapse path"
                                    transitionName="zoom-big-fast"
                                  >
                                    <Tooltip
                                      align={Object {}}
                                      arrowContent={null}
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      builtinPlacements={
                                        Object {
                                          "bottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tc",
                                              "bc",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "bottomLeft": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tl",
                                              "bl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "bottomRight": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tr",
                                              "br",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "left": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "cr",
                                              "cl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "leftBottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "br",
                                              "bl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "leftTop": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tr",
                                              "tl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "right": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "cl",
                                              "cr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "rightBottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bl",
                                              "br",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "rightTop": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tl",
                                              "tr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "top": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bc",
                                              "tc",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "topLeft": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bl",
                                              "tl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "topRight": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "br",
                                              "tr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                        }
                                      }
                                      destroyTooltipOnHide={false}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onPopupAlign={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay="Collapse path"
                                      overlayClassName="cap-tooltip-overlay-v2"
                                      placement="top"
                                      prefixCls="ant-tooltip"
                                      title="Collapse path"
                                      transitionName="zoom-big-fast"
                                      trigger={
                                        Array [
                                          "hover",
                                        ]
                                      }
                                      visible={false}
                                    >
                                      <Trigger
                                        action={
                                          Array [
                                            "hover",
                                          ]
                                        }
                                        afterPopupVisibleChange={[Function]}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        blurDelay={0.15}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        defaultPopupVisible={false}
                                        destroyPopupOnHide={false}
                                        focusDelay={0}
                                        getDocument={[Function]}
                                        getPopupClassNameFromAlign={[Function]}
                                        hideAction={Array []}
                                        mask={false}
                                        maskClosable={true}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onPopupAlign={[Function]}
                                        onPopupVisibleChange={[Function]}
                                        overlay="Collapse path"
                                        popup={[Function]}
                                        popupAlign={Object {}}
                                        popupClassName="cap-tooltip-overlay-v2"
                                        popupPlacement="top"
                                        popupStyle={Object {}}
                                        popupTransitionName="zoom-big-fast"
                                        popupVisible={false}
                                        prefixCls="ant-tooltip"
                                        showAction={Array []}
                                        title="Collapse path"
                                        visible={false}
                                      >
                                        <CapIcon
                                          key="trigger"
                                          onClick={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          size="s"
                                          type="chevron-up"
                                          withbackground={true}
                                        >
                                          <Styled(Icon)
                                            className="cap-icon-v2 cap-icon-v2-chevron-up"
                                            component={[Function]}
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            size="s"
                                            withbackground={true}
                                          >
                                            <StyledComponent
                                              className="cap-icon-v2 cap-icon-v2-chevron-up"
                                              component={[Function]}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "dNCrpK",
                                                    "rules": Array [
                                                      "
  font-size: ",
                                                      [Function],
                                                      ";
",
                                                    ],
                                                  },
                                                  "createFromIconfontCN": [Function],
                                                  "displayName": "Styled(Icon)",
                                                  "foldedComponentIds": Array [],
                                                  "getTwoToneColor": [Function],
                                                  "render": [Function],
                                                  "setTwoToneColor": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              size="s"
                                              withbackground={true}
                                            >
                                              <Icon
                                                className="sc-bwzfXH iiFAtu cap-icon-v2 cap-icon-v2-chevron-up"
                                                component={[Function]}
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                size="s"
                                                withbackground={true}
                                              >
                                                <LocaleReceiver
                                                  componentName="Icon"
                                                >
                                                  <i
                                                    className="anticon sc-bwzfXH iiFAtu cap-icon-v2 cap-icon-v2-chevron-up"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    size="s"
                                                    tabIndex={-1}
                                                    withbackground={true}
                                                  >
                                                    <component
                                                      aria-hidden={true}
                                                      className=""
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      width="1em"
                                                    >
                                                      <SvgChevronUp>
                                                        <svg
                                                          fill="currentColor"
                                                          height="1em"
                                                          viewBox="0 0 24 24"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M12.707 9.003l4.593 4.593a.991.991 0 0 1-1.4 1.4l-3.9-3.9-3.9 3.9a.991.991 0 0 1-1.4-1.4l4.593-4.593a.999.999 0 0 1 1.414 0"
                                                            id="chevron-up_svg__a"
                                                          />
                                                        </svg>
                                                      </SvgChevronUp>
                                                    </component>
                                                  </i>
                                                </LocaleReceiver>
                                              </Icon>
                                            </StyledComponent>
                                          </Styled(Icon)>
                                        </CapIcon>
                                      </Trigger>
                                    </Tooltip>
                                  </Tooltip>
                                </CapTooltip>
                              </div>
                            </Col>
                          </CapColumn>
                          <ContentsRenderer
                            pathIndex={0}
                            pathList={
                              Array [
                                Object {
                                  "contents": "Test 1",
                                  "id": "1",
                                  "pathName": null,
                                },
                              ]
                            }
                            setPathList={[MockFunction]}
                          >
                            Test 1
                          </ContentsRenderer>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </CapBlock>
                </Wrapper>
                <CapRow
                  align="middle"
                  type="flex"
                >
                  <Row
                    align="middle"
                    className="cap-row-v2"
                    gutter={0}
                    type="flex"
                  >
                    <div
                      className="ant-row-flex ant-row-flex-middle cap-row-v2"
                    >
                      <styled.div
                        key=".0"
                        type="horizontal"
                        width="24px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cSHVUG",
                                "isStatic": false,
                                "lastClassName": "jwBFGg",
                                "rules": Array [
                                  "
  margin-left: ",
                                  [Function],
                                  ";
  height: ",
                                  [Function],
                                  ";
  width: ",
                                  [Function],
                                  ";
  border-right: ",
                                  [Function],
                                  ";
  border-bottom: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cSHVUG",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          type="horizontal"
                          width="24px"
                        >
                          <div
                            className="sc-cSHVUG eVQNHu"
                            type="horizontal"
                            width="24px"
                          />
                        </StyledComponent>
                      </styled.div>
                      <CapRow
                        key=".1"
                        style={
                          Object {
                            "marginTop": false,
                          }
                        }
                      >
                        <Row
                          className="cap-row-v2"
                          gutter={0}
                          style={
                            Object {
                              "marginTop": false,
                            }
                          }
                        >
                          <div
                            className="ant-row cap-row-v2"
                            style={
                              Object {
                                "marginTop": false,
                              }
                            }
                          >
                            <styled.div
                              key=".0"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-kAzzGY",
                                      "isStatic": false,
                                      "lastClassName": "fdBXFv",
                                      "rules": Array [
                                        "
text-align: center;
color: ",
                                        "#5e6c84",
                                        " 
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-kAzzGY",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-kAzzGY fdBXFv"
                                />
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key=".1"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-chPdSV",
                                      "isStatic": false,
                                      "lastClassName": "giTCLv",
                                      "rules": Array [
                                        "
  padding: 2px;
  max-height: 40px;
  width: 80px;
  div {
    text-overflow: ellipsis;
    overflow: hidden;
    // Addition lines for 2 line or multiline ellipsis
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    white-space: normal;
    text-align: center;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-chPdSV",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-chPdSV giTCLv"
                                >
                                  <CapTooltip
                                    title={null}
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      overlayClassName="cap-tooltip-overlay-v2"
                                      placement="top"
                                      title={null}
                                      transitionName="zoom-big-fast"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "ignoreShake": true,
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay=""
                                        overlayClassName="cap-tooltip-overlay-v2"
                                        placement="top"
                                        prefixCls="ant-tooltip"
                                        title={null}
                                        transitionName="zoom-big-fast"
                                        trigger={
                                          Array [
                                            "hover",
                                          ]
                                        }
                                        visible={false}
                                      >
                                        <Trigger
                                          action={
                                            Array [
                                              "hover",
                                            ]
                                          }
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "ignoreShake": true,
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay=""
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName="cap-tooltip-overlay-v2"
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big-fast"
                                          popupVisible={false}
                                          prefixCls="ant-tooltip"
                                          showAction={Array []}
                                          title={null}
                                          visible={false}
                                        >
                                          <CapRow
                                            key="trigger"
                                            onClick={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            path-name-edit="false"
                                          >
                                            <Row
                                              className="cap-row-v2"
                                              gutter={0}
                                              onClick={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              path-name-edit="false"
                                            >
                                              <div
                                                className="ant-row cap-row-v2"
                                                onClick={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                path-name-edit="false"
                                              >
                                                Yes
                                              </div>
                                            </Row>
                                          </CapRow>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </CapTooltip>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </Row>
                      </CapRow>
                      <styled.div
                        key=".2"
                        type="horizontal"
                        width="24px"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-cSHVUG",
                                "isStatic": false,
                                "lastClassName": "jwBFGg",
                                "rules": Array [
                                  "
  margin-left: ",
                                  [Function],
                                  ";
  height: ",
                                  [Function],
                                  ";
  width: ",
                                  [Function],
                                  ";
  border-right: ",
                                  [Function],
                                  ";
  border-bottom: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-cSHVUG",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          type="horizontal"
                          width="24px"
                        >
                          <div
                            className="sc-cSHVUG eVQNHu"
                            type="horizontal"
                            width="24px"
                          />
                        </StyledComponent>
                      </styled.div>
                      <Styled(CapIcon)
                        color="#dfe2e7"
                        key=".3"
                        style={
                          Object {
                            "transform": "translateX(-50%)",
                          }
                        }
                        type="chevron-right"
                      >
                        <StyledComponent
                          color="#dfe2e7"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "AntIcon": [Function],
                              "CapIconAvatar": [Function],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dxgOiQ",
                                "isStatic": false,
                                "lastClassName": "kaVixh",
                                "rules": Array [
                                  "
  color:",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(CapIcon)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-dxgOiQ",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "transform": "translateX(-50%)",
                            }
                          }
                          type="chevron-right"
                        >
                          <CapIcon
                            className="sc-dxgOiQ kaVixh"
                            color="#dfe2e7"
                            style={
                              Object {
                                "transform": "translateX(-50%)",
                              }
                            }
                            type="chevron-right"
                          >
                            <Styled(Icon)
                              className="cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                              color="#dfe2e7"
                              component={[Function]}
                              style={
                                Object {
                                  "transform": "translateX(-50%)",
                                }
                              }
                            >
                              <StyledComponent
                                className="cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                                color="#dfe2e7"
                                component={[Function]}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": false,
                                      "lastClassName": "dNCrpK",
                                      "rules": Array [
                                        "
  font-size: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "createFromIconfontCN": [Function],
                                    "displayName": "Styled(Icon)",
                                    "foldedComponentIds": Array [],
                                    "getTwoToneColor": [Function],
                                    "render": [Function],
                                    "setTwoToneColor": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                style={
                                  Object {
                                    "transform": "translateX(-50%)",
                                  }
                                }
                              >
                                <Icon
                                  className="sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                                  color="#dfe2e7"
                                  component={[Function]}
                                  style={
                                    Object {
                                      "transform": "translateX(-50%)",
                                    }
                                  }
                                >
                                  <LocaleReceiver
                                    componentName="Icon"
                                  >
                                    <i
                                      className="anticon sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                                      color="#dfe2e7"
                                      style={
                                        Object {
                                          "transform": "translateX(-50%)",
                                        }
                                      }
                                    >
                                      <component
                                        aria-hidden={true}
                                        className=""
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        width="1em"
                                      >
                                        <SvgChevronRight>
                                          <svg
                                            fill="currentColor"
                                            height="1em"
                                            viewBox="0 0 24 24"
                                            width="1em"
                                          >
                                            <path
                                              d="M14.992 12.707L10.4 17.3A.991.991 0 0 1 9 15.9l3.9-3.9L9 8.1a.991.991 0 0 1 1.4-1.4l4.594 4.592a1 1 0 0 1 0 1.415"
                                              id="chevron-right_svg__a"
                                            />
                                          </svg>
                                        </SvgChevronRight>
                                      </component>
                                    </i>
                                  </LocaleReceiver>
                                </Icon>
                              </StyledComponent>
                            </Styled(Icon)>
                          </CapIcon>
                        </StyledComponent>
                      </Styled(CapIcon)>
                    </div>
                  </Row>
                </CapRow>
              </div>
            </StyledComponent>
          </styled.div>
        </div>
      </Row>
    </CapRow>
    <styled.div
      marginLeft="606px"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-kGXeez",
              "isStatic": false,
              "lastClassName": "cUbow",
              "rules": Array [
                "
  margin-left: ",
                [Function],
                ";
  .button-disabled-tooltip-wrapper .cap-button-v2.ant-btn[disabled] > * {
    color: ",
                "#2466ea",
                ";
  }
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-kGXeez",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        marginLeft="606px"
      >
        <div
          className="sc-kGXeez cUbow"
        >
          <styled.div
            borderType="dashed"
            borderWidth="2px"
            height="44px"
            type="vertical"
          >
            <StyledComponent
              borderType="dashed"
              borderWidth="2px"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cSHVUG",
                    "isStatic": false,
                    "lastClassName": "jwBFGg",
                    "rules": Array [
                      "
  margin-left: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  border-right: ",
                      [Function],
                      ";
  border-bottom: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-cSHVUG",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              height="44px"
              type="vertical"
            >
              <div
                className="sc-cSHVUG bwjphg"
                height="44px"
                type="vertical"
              />
            </StyledComponent>
          </styled.div>
          <CapTooltip
            title=""
          >
            <Tooltip
              arrowPointAtCenter={false}
              autoAdjustOverflow={true}
              mouseEnterDelay={0.1}
              mouseLeaveDelay={0.1}
              overlayClassName="cap-tooltip-overlay-v2"
              placement="top"
              title=""
              transitionName="zoom-big-fast"
            >
              <Tooltip
                align={Object {}}
                arrowContent={null}
                arrowPointAtCenter={false}
                autoAdjustOverflow={true}
                builtinPlacements={
                  Object {
                    "bottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tc",
                        "bc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomLeft": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomRight": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "left": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "cr",
                        "cl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "leftBottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "bl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "leftTop": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        -4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "tl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "right": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "cl",
                        "cr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "rightBottom": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "br",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "rightTop": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        4,
                        0,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "tr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "top": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bc",
                        "tc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topLeft": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topRight": Object {
                      "ignoreShake": true,
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                  }
                }
                destroyTooltipOnHide={false}
                mouseEnterDelay={0.1}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onVisibleChange={[Function]}
                overlay=""
                overlayClassName="cap-tooltip-overlay-v2"
                placement="top"
                prefixCls="ant-tooltip"
                title=""
                transitionName="zoom-big-fast"
                trigger={
                  Array [
                    "hover",
                  ]
                }
                visible={false}
              >
                <Trigger
                  action={
                    Array [
                      "hover",
                    ]
                  }
                  afterPopupVisibleChange={[Function]}
                  arrowContent={null}
                  arrowPointAtCenter={false}
                  autoAdjustOverflow={true}
                  blurDelay={0.15}
                  builtinPlacements={
                    Object {
                      "bottom": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tc",
                          "bc",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "bottomLeft": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "bl",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "bottomRight": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "br",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "left": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          -4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "cr",
                          "cl",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "leftBottom": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          -4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "bl",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "leftTop": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          -4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tr",
                          "tl",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "right": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "cl",
                          "cr",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "rightBottom": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "br",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "rightTop": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          4,
                          0,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "tl",
                          "tr",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "top": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bc",
                          "tc",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "topLeft": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bl",
                          "tl",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                      "topRight": Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "br",
                          "tr",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      },
                    }
                  }
                  defaultPopupVisible={false}
                  destroyPopupOnHide={false}
                  focusDelay={0}
                  getDocument={[Function]}
                  getPopupClassNameFromAlign={[Function]}
                  hideAction={Array []}
                  mask={false}
                  maskClosable={true}
                  mouseEnterDelay={0.1}
                  mouseLeaveDelay={0.1}
                  onPopupAlign={[Function]}
                  onPopupVisibleChange={[Function]}
                  overlay=""
                  popup={[Function]}
                  popupAlign={Object {}}
                  popupClassName="cap-tooltip-overlay-v2"
                  popupPlacement="top"
                  popupStyle={Object {}}
                  popupTransitionName="zoom-big-fast"
                  popupVisible={false}
                  prefixCls="ant-tooltip"
                  showAction={Array []}
                  title=""
                  visible={false}
                >
                  <span
                    className="button-disabled-tooltip-wrapper"
                    key="trigger"
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <CapButton
                      disabled={false}
                      isAddBtn={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "transform": "translateX(-50%)",
                        }
                      }
                      type="flat"
                    >
                      <Button
                        block={false}
                        className="cap-button-v2 flat-btn add-btn has-icon"
                        disabled={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "transform": "translateX(-50%)",
                          }
                        }
                        type="flat"
                      >
                        <Wave>
                          <button
                            className="ant-btn cap-button-v2 flat-btn add-btn has-icon ant-btn-flat"
                            disabled={false}
                            onClick={[Function]}
                            style={
                              Object {
                                "transform": "translateX(-50%)",
                              }
                            }
                            type="button"
                          >
                            <div
                              className="cap-button-v2-prefix"
                              key=".0"
                            >
                              <CapIcon
                                size="s"
                                type="add"
                              >
                                <Styled(Icon)
                                  className="cap-icon-v2 cap-icon-v2-add"
                                  component={[Function]}
                                  size="s"
                                >
                                  <StyledComponent
                                    className="cap-icon-v2 cap-icon-v2-add"
                                    component={[Function]}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "dNCrpK",
                                          "rules": Array [
                                            "
  font-size: ",
                                            [Function],
                                            ";
",
                                          ],
                                        },
                                        "createFromIconfontCN": [Function],
                                        "displayName": "Styled(Icon)",
                                        "foldedComponentIds": Array [],
                                        "getTwoToneColor": [Function],
                                        "render": [Function],
                                        "setTwoToneColor": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="s"
                                  >
                                    <Icon
                                      className="sc-bwzfXH iiFAtu cap-icon-v2 cap-icon-v2-add"
                                      component={[Function]}
                                      size="s"
                                    >
                                      <LocaleReceiver
                                        componentName="Icon"
                                      >
                                        <i
                                          className="anticon sc-bwzfXH iiFAtu cap-icon-v2 cap-icon-v2-add"
                                          size="s"
                                        >
                                          <component
                                            aria-hidden={true}
                                            className=""
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            width="1em"
                                          >
                                            <SvgAdd>
                                              <svg
                                                fill="currentColor"
                                                height="1em"
                                                viewBox="0 0 16 16"
                                                width="1em"
                                              >
                                                <path
                                                  d="M9 7h4a1 1 0 0 1 0 2H9v4a1 1 0 0 1-2 0V9H3a1 1 0 1 1 0-2h4V3a1 1 0 1 1 2 0v4z"
                                                />
                                              </svg>
                                            </SvgAdd>
                                          </component>
                                        </i>
                                      </LocaleReceiver>
                                    </Icon>
                                  </StyledComponent>
                                </Styled(Icon)>
                              </CapIcon>
                            </div>
                            <span
                              key=".2"
                            >
                              Add path
                            </span>
                          </button>
                        </Wave>
                      </Button>
                    </CapButton>
                  </span>
                </Trigger>
              </Tooltip>
            </Tooltip>
          </CapTooltip>
          <styled.div
            borderType="dashed"
            borderWidth="2px"
            height="44px"
            type="vertical"
          >
            <StyledComponent
              borderType="dashed"
              borderWidth="2px"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-cSHVUG",
                    "isStatic": false,
                    "lastClassName": "jwBFGg",
                    "rules": Array [
                      "
  margin-left: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  border-right: ",
                      [Function],
                      ";
  border-bottom: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-cSHVUG",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              height="44px"
              type="vertical"
            >
              <div
                className="sc-cSHVUG bwjphg"
                height="44px"
                type="vertical"
              />
            </StyledComponent>
          </styled.div>
          <CapRow
            align="middle"
            style={
              Object {
                "transform": "translateY(-50%)",
              }
            }
            type="flex"
          >
            <Row
              align="middle"
              className="cap-row-v2"
              gutter={0}
              style={
                Object {
                  "transform": "translateY(-50%)",
                }
              }
              type="flex"
            >
              <div
                className="ant-row-flex ant-row-flex-middle cap-row-v2"
                style={
                  Object {
                    "transform": "translateY(-50%)",
                  }
                }
              >
                <styled.div
                  borderType="dashed"
                  borderWidth="2px"
                  type="horizontal"
                  width="74px"
                >
                  <StyledComponent
                    borderType="dashed"
                    borderWidth="2px"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-cSHVUG",
                          "isStatic": false,
                          "lastClassName": "jwBFGg",
                          "rules": Array [
                            "
  margin-left: ",
                            [Function],
                            ";
  height: ",
                            [Function],
                            ";
  width: ",
                            [Function],
                            ";
  border-right: ",
                            [Function],
                            ";
  border-bottom: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-cSHVUG",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    type="horizontal"
                    width="74px"
                  >
                    <div
                      className="sc-cSHVUG jwBFGg"
                      type="horizontal"
                      width="74px"
                    />
                  </StyledComponent>
                </styled.div>
                <styled.div
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-chPdSV",
                          "isStatic": false,
                          "lastClassName": "giTCLv",
                          "rules": Array [
                            "
  padding: 2px;
  max-height: 40px;
  width: 80px;
  div {
    text-overflow: ellipsis;
    overflow: hidden;
    // Addition lines for 2 line or multiline ellipsis
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    white-space: normal;
    text-align: center;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-chPdSV",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <div
                      className="sc-chPdSV giTCLv"
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      No
                    </div>
                  </StyledComponent>
                </styled.div>
                <styled.div
                  borderType="dashed"
                  borderWidth="2px"
                  type="horizontal"
                  width="74px"
                >
                  <StyledComponent
                    borderType="dashed"
                    borderWidth="2px"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-cSHVUG",
                          "isStatic": false,
                          "lastClassName": "jwBFGg",
                          "rules": Array [
                            "
  margin-left: ",
                            [Function],
                            ";
  height: ",
                            [Function],
                            ";
  width: ",
                            [Function],
                            ";
  border-right: ",
                            [Function],
                            ";
  border-bottom: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-cSHVUG",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    type="horizontal"
                    width="74px"
                  >
                    <div
                      className="sc-cSHVUG jwBFGg"
                      type="horizontal"
                      width="74px"
                    />
                  </StyledComponent>
                </styled.div>
                <Styled(CapIcon)
                  color="#dfe2e7"
                  key=".1"
                  style={
                    Object {
                      "transform": "translateX(-50%)",
                    }
                  }
                  type="chevron-right"
                >
                  <StyledComponent
                    color="#dfe2e7"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "AntIcon": [Function],
                        "CapIconAvatar": [Function],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-dxgOiQ",
                          "isStatic": false,
                          "lastClassName": "kaVixh",
                          "rules": Array [
                            "
  color:",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "Styled(CapIcon)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-dxgOiQ",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    style={
                      Object {
                        "transform": "translateX(-50%)",
                      }
                    }
                    type="chevron-right"
                  >
                    <CapIcon
                      className="sc-dxgOiQ kaVixh"
                      color="#dfe2e7"
                      style={
                        Object {
                          "transform": "translateX(-50%)",
                        }
                      }
                      type="chevron-right"
                    >
                      <Styled(Icon)
                        className="cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                        color="#dfe2e7"
                        component={[Function]}
                        style={
                          Object {
                            "transform": "translateX(-50%)",
                          }
                        }
                      >
                        <StyledComponent
                          className="cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                          color="#dfe2e7"
                          component={[Function]}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "dNCrpK",
                                "rules": Array [
                                  "
  font-size: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "createFromIconfontCN": [Function],
                              "displayName": "Styled(Icon)",
                              "foldedComponentIds": Array [],
                              "getTwoToneColor": [Function],
                              "render": [Function],
                              "setTwoToneColor": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "transform": "translateX(-50%)",
                            }
                          }
                        >
                          <Icon
                            className="sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                            color="#dfe2e7"
                            component={[Function]}
                            style={
                              Object {
                                "transform": "translateX(-50%)",
                              }
                            }
                          >
                            <LocaleReceiver
                              componentName="Icon"
                            >
                              <i
                                className="anticon sc-bwzfXH dNCrpK cap-icon-v2 cap-icon-v2-chevron-right sc-dxgOiQ kaVixh"
                                color="#dfe2e7"
                                style={
                                  Object {
                                    "transform": "translateX(-50%)",
                                  }
                                }
                              >
                                <component
                                  aria-hidden={true}
                                  className=""
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  width="1em"
                                >
                                  <SvgChevronRight>
                                    <svg
                                      fill="currentColor"
                                      height="1em"
                                      viewBox="0 0 24 24"
                                      width="1em"
                                    >
                                      <path
                                        d="M14.992 12.707L10.4 17.3A.991.991 0 0 1 9 15.9l3.9-3.9L9 8.1a.991.991 0 0 1 1.4-1.4l4.594 4.592a1 1 0 0 1 0 1.415"
                                        id="chevron-right_svg__a"
                                      />
                                    </svg>
                                  </SvgChevronRight>
                                </component>
                              </i>
                            </LocaleReceiver>
                          </Icon>
                        </StyledComponent>
                      </Styled(Icon)>
                    </CapIcon>
                  </StyledComponent>
                </Styled(CapIcon)>
              </div>
            </Row>
          </CapRow>
        </div>
      </StyledComponent>
    </styled.div>
    <Wrapper
      okText="Yes, Delete"
      onCancel={[Function]}
      onOk={[Function]}
      title="Confirm delete path"
      visible={false}
    >
      <CapModal
        closeText="No"
        okText="Yes, Delete"
        onCancel={[Function]}
        onOk={[Function]}
        title="Confirm delete path"
        visible={false}
      >
        <Modal
          className="cap-modal-v2"
          confirmLoading={false}
          footer={
            <div
              className="default-footer"
            >
              <CapButton
                isAddBtn={false}
                onClick={[Function]}
                type="primary"
              >
                Yes, Delete
              </CapButton>
              <CapButton
                isAddBtn={false}
                onClick={[Function]}
                type="flat"
              >
                No
              </CapButton>
            </div>
          }
          maskTransitionName="fade"
          okType="primary"
          onCancel={[Function]}
          onOk={[Function]}
          title="Confirm delete path"
          transitionName="zoom"
          visible={false}
          width={520}
          wrapClassName="cap-modal-v2-wrap"
        >
          <Component
            className="cap-modal-v2"
            closeIcon={
              <span
                className="ant-modal-close-x"
              >
                <Icon
                  className="ant-modal-close-icon"
                  type="close"
                />
              </span>
            }
            confirmLoading={false}
            footer={
              <div
                className="default-footer"
              >
                <CapButton
                  isAddBtn={false}
                  onClick={[Function]}
                  type="primary"
                >
                  Yes, Delete
                </CapButton>
                <CapButton
                  isAddBtn={false}
                  onClick={[Function]}
                  type="flat"
                >
                  No
                </CapButton>
              </div>
            }
            maskTransitionName="fade"
            okType="primary"
            onCancel={[Function]}
            onClose={[Function]}
            onOk={[Function]}
            prefixCls="ant-modal"
            title="Confirm delete path"
            transitionName="zoom"
            visible={false}
            width={520}
            wrapClassName="cap-modal-v2-wrap"
          >
            <PortalWrapper
              visible={false}
            />
          </Component>
        </Modal>
      </CapModal>
    </Wrapper>
  </CapMultiplePath>
</Wrapper>
`;
