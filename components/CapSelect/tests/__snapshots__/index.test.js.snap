// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CapSelect /> render capSelect 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CapSelect
    handleItemChange={[MockFunction]}
    items={
      Array [
        Object {
          "label": "Purples",
          "value": "purples",
        },
        Object {
          "label": "Buckle",
          "value": "buckle",
        },
        Object {
          "label": "Ski",
          "value": "ski",
        },
        Object {
          "label": "Splash",
          "value": "splash",
        },
        Object {
          "label": "Metro",
          "value": "metro",
        },
      ]
    }
    searchPlaceholder="Search"
    selectPlaceholder="Select organizations"
    selectedItem="Ski"
    showSearch={true}
    width="250px"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="cap-select-v2-selection"
        style={
          Object {
            "width": "250px",
          }
        }
      >
        <div
          className="cap-select-v2-selected-value"
        >
          <ForwardRef
            type="h5"
          >
            Select organizations
          </ForwardRef>
        </div>
        <img
          alt="down-icon"
          className="cap-select-v2-arrow"
          src="chevron-down.svg"
        />
      </div>,
      "content": <React.Fragment>
        <div
          className="cap-select-v2-search"
        >
          <Component
            onChange={[Function]}
            placeholder="Search"
            value=""
          />
          <img
            alt=""
            className="icon-search"
            src="search.svg"
          />
          
        </div>
        <div
          className="cap-select-v2-items-wrapper"
        >
          <div
            className="cap-select-v2-select-item"
            onClick={[Function]}
          >
            Purples
          </div>
          <div
            className="cap-select-v2-select-item"
            onClick={[Function]}
          >
            Buckle
          </div>
          <div
            className="cap-select-v2-select-item"
            onClick={[Function]}
          >
            Ski
          </div>
          <div
            className="cap-select-v2-select-item"
            onClick={[Function]}
          >
            Splash
          </div>
          <div
            className="cap-select-v2-select-item"
            onClick={[Function]}
          >
            Metro
          </div>
        </div>
      </React.Fragment>,
      "getPopupContainer": [Function],
      "mouseEnterDelay": 0.1,
      "mouseLeaveDelay": 0.1,
      "onVisibleChange": [Function],
      "overlayClassName": "cap-select-v2-popover",
      "overlayStyle": Object {
        "width": "100%",
      },
      "placement": "bottomLeft",
      "transitionName": "zoom-big",
      "trigger": "click",
      "visible": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="cap-select-v2-selected-value"
          >
            <ForwardRef
              type="h5"
            >
              Select organizations
            </ForwardRef>
          </div>,
          <img
            alt="down-icon"
            className="cap-select-v2-arrow"
            src="chevron-down.svg"
          />,
        ],
        "className": "cap-select-v2-selection",
        "style": Object {
          "width": "250px",
        },
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ForwardRef
              type="h5"
            >
              Select organizations
            </ForwardRef>,
            "className": "cap-select-v2-selected-value",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Select organizations",
              "type": "h5",
            },
            "ref": null,
            "rendered": "Select organizations",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "CapHeadingSpan": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "rules": Array [
                    "
font-size: ",
                    [Function],
                    ";
font-weight: ",
                    [Function],
                    ";
color: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": false,
                "rules": Array [
                  "
    font-size: ",
                  [Function],
                  ";
    font-weight: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
    ",
                ],
              },
              "defaultProps": Object {
                "type": "h5",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "children": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "down-icon",
            "className": "cap-select-v2-arrow",
            "src": "chevron-down.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="cap-select-v2-selection"
          style={
            Object {
              "width": "250px",
            }
          }
        >
          <div
            className="cap-select-v2-selected-value"
          >
            <ForwardRef
              type="h5"
            >
              Select organizations
            </ForwardRef>
          </div>
          <img
            alt="down-icon"
            className="cap-select-v2-arrow"
            src="chevron-down.svg"
          />
        </div>,
        "content": <React.Fragment>
          <div
            className="cap-select-v2-search"
          >
            <Component
              onChange={[Function]}
              placeholder="Search"
              value=""
            />
            <img
              alt=""
              className="icon-search"
              src="search.svg"
            />
            
          </div>
          <div
            className="cap-select-v2-items-wrapper"
          >
            <div
              className="cap-select-v2-select-item"
              onClick={[Function]}
            >
              Purples
            </div>
            <div
              className="cap-select-v2-select-item"
              onClick={[Function]}
            >
              Buckle
            </div>
            <div
              className="cap-select-v2-select-item"
              onClick={[Function]}
            >
              Ski
            </div>
            <div
              className="cap-select-v2-select-item"
              onClick={[Function]}
            >
              Splash
            </div>
            <div
              className="cap-select-v2-select-item"
              onClick={[Function]}
            >
              Metro
            </div>
          </div>
        </React.Fragment>,
        "getPopupContainer": [Function],
        "mouseEnterDelay": 0.1,
        "mouseLeaveDelay": 0.1,
        "onVisibleChange": [Function],
        "overlayClassName": "cap-select-v2-popover",
        "overlayStyle": Object {
          "width": "100%",
        },
        "placement": "bottomLeft",
        "transitionName": "zoom-big",
        "trigger": "click",
        "visible": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="cap-select-v2-selected-value"
            >
              <ForwardRef
                type="h5"
              >
                Select organizations
              </ForwardRef>
            </div>,
            <img
              alt="down-icon"
              className="cap-select-v2-arrow"
              src="chevron-down.svg"
            />,
          ],
          "className": "cap-select-v2-selection",
          "style": Object {
            "width": "250px",
          },
        },
        "ref": [Function],
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ForwardRef
                type="h5"
              >
                Select organizations
              </ForwardRef>,
              "className": "cap-select-v2-selected-value",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Select organizations",
                "type": "h5",
              },
              "ref": null,
              "rendered": "Select organizations",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "CapHeadingSpan": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "rules": Array [
                      "
font-size: ",
                      [Function],
                      ";
font-weight: ",
                      [Function],
                      ";
color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "rules": Array [
                    "
    font-size: ",
                    [Function],
                    ";
    font-weight: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
    ",
                  ],
                },
                "defaultProps": Object {
                  "type": "h5",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "children": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "down-icon",
              "className": "cap-select-v2-arrow",
              "src": "chevron-down.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
