/**
* CapFormItemDoc
*/
import React, { Component } from "react";
import PropertyTable from '../../helpers/PropertyTable';
import CapFormItem from "../../components/CapFormItem";
import "./info.scss";

const infoData = [
  {
    key: 1,
    property: "colon",
    description: "Used with label, whether to display : after label text.",
    type: "boolean",
    default: true,
  },
  {
    key: 2,
    property: "extra",
    description: "The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time.",
    type: "string|ReactNode",
    default: null,
  },
  {
    key: 3,
    property: "hasFeedback",
    description: "Used with validateStatus, this option specifies the validation status icon. Recommended to be used only with Input.",
    type: "boolean",
    default: false,
  },
  {
    key: 4,
    property: "help",
    description: "The prompt message. If not provided, the prompt message will be generated by the validation rule.",
    type: "string|ReactNode",
    default: null,
  },
  {
    key: 5,
    property: "label",
    description: "Label text",
    type: "string|ReactNode",
    default: null,
  },
  {
    key: 6,
    property: "labelCol",
    description: "The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>",
    type: "object",
    default: null,
  },
  {
    key: 7,
    property: "required",
    description: "Whether provided or not, it will be generated by the validation rule.",
    type: "boolean",
    default: false,
  },
  {
    key: 8,
    property: "validateStatus",
    description: "The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating'",
    type: "string",
    default: null,
  },
  {
    key: 9,
    property: "wrapperCol",
    description: "The layout for input controls, same as labelCol",
    type: "object",
    default: null,
  },
  {
    key: 10,
    property: "enum",
    description: "validate a value from a list of possible values",
    type: "string",
    default: "-",
  },
  {
    property: "len",
    description: "validate an exact length of a field",
    type: "number",
    default: "-",
  },
  {
    property: "max",
    description: "validate a max length of a field",
    type: "number",
    default: "-",
  },
  {
    property: "message",
    description: "validation error message",
    type: "string|ReactNode",
    default: "-",
  },
  {
    property: "min",
    description: "validate a min length of a field",
    type: "number",
    default: "-",
  },
  {
    property: "pattern",
    description: "validate from a regular expression",
    type: "RegExp",
    default: "-",
  },
  {
    property: "required",
    description: "indicates whether field is required",
    type: "boolean",
    default: "false",
  },
  {
    property: "transform",
    description: "transform a value before validation",
    type: "function(value) => transformedValue:any",
    default: "-",
  },
  {
    property: "type",
    description: "built-in validation type, available options",
    type: "string",
    default: "'string'",
  },
  {
    property: "validator",
    description: "custom validate function (Note: callback must be called)",
    type: "function(rule, value, callback)",
    default: "-",
  },
  {
    property: "whitespace",
    description: "treat required fields that only contain whitespace as errors",
    type: "boolean",
    default: "false",
  },
];

export default class CapFormItemDoc extends Component { // eslint-disable-line react/prefer-stateless-function
  render() {
    return (
      <div className="cap-form-item-info">
        <div className="cap-form-item-showcase">
          <CapFormItem />
        </div>
        <PropertyTable data={infoData} />
      </div>
    );
  }
}
